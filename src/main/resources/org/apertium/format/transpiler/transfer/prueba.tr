Transfer(default="chunk")
  Macro conj_verb1(npar=1)
    case
      when clip(pos=1, side=sl, part=lem) inCaseless verbs_modals then
        case
          when clip(pos=1, side=sl, part=lem) equalCaseless "can" and clip(pos=1, side=sl, part=temps) equal litTag("pres") then
            temps_chunk = litTag("pri");
          end /* when */
          when clip(pos=1, side=sl, part=lem) equalCaseless "can" and clip(pos=1, side=sl, part=temps) equal litTag("past") then
            temps_chunk = litTag("cni");
          end /* when */
          when clip(pos=1, side=sl, part=lem) equalCaseless "must" or clip(pos=1, side=sl, part=lem) equalCaseless "may" then
            temps_chunk = litTag("pri");
          end /* when */
          when clip(pos=1, side=sl, part=lem) equalCaseless "should" or clip(pos=1, side=sl, part=lem) equalCaseless "might" then
            temps_chunk = litTag("cni");
          end /* when */
        end /* choose */
        lema_SV = "mod";
        pers_chunk = litTag("PD");
        nbr_chunk = litTag("ND");
        verbfinal = clip(pos=1, side=tl, part=lemh) concat clip(pos=1, side=tl, part=a_verb) concat litTag("3") concat litTag("4") concat litTag("5") concat clip(pos=1, side=tl, part=lemq);
      end /* when */
      otherwise
        case
          when clip(pos=1, side=sl, part=temps) equal litTag("past") and clip(pos=1, side=sl, part=pers) equal "" and clip(pos=1, side=sl, part=nbr) equal "" then
            lema_SV = "verbcj_perif";
            temps_chunk = litTag("ifip");
            pers_chunk = litTag("PD");
            nbr_chunk = litTag("ND");
            verbfinal = "anar" concat litTag("vaux") concat litTag("4") concat litTag("5") concat "$ ^" concat clip(pos=1, side=tl, part=lemh) concat clip(pos=1, side=tl, part=a_verb) concat litTag("inf") concat clip(pos=1, side=tl, part=lemq);
          end /* when */
          when clip(pos=1, side=sl, part=temps) equal litTag("past") and clip(pos=1, side=sl, part=nbr) equal litTag("sg") then
            lema_SV = "verbcj_perif";
            temps_chunk = litTag("ifip");
            pers_chunk = litTag("PD");
            nbr_chunk = clip(pos=1, side=tl, part=nbr);
            verbfinal = "anar" concat litTag("vaux") concat litTag("4") concat litTag("5") concat "$ ^" concat clip(pos=1, side=tl, part=lemh) concat clip(pos=1, side=tl, part=a_verb) concat litTag("inf") concat clip(pos=1, side=tl, part=lemq);
          end /* when */
          when clip(pos=1, side=sl, part=temps) equal litTag("pres") then
            clip(pos=1, side=tl, part=temps) = litTag("pri");
            lema_SV = "verbcj";
            temps_chunk = clip(pos=1, side=tl, part=temps);
            pers_chunk = litTag("PD");
            nbr_chunk = litTag("ND");
            verbfinal = clip(pos=1, side=tl, part=lemh) concat clip(pos=1, side=tl, part=a_verb) concat litTag("3") concat litTag("4") concat litTag("5") concat clip(pos=1, side=tl, part=lemq);
          end /* when */
          when clip(pos=1, side=sl, part=temps) equal litTag("pri") then
            lema_SV = "verbcj";
            temps_chunk = clip(pos=1, side=tl, part=temps);
            pers_chunk = clip(pos=1, side=tl, part=pers);
            nbr_chunk = clip(pos=1, side=tl, part=nbr);
            verbfinal = clip(pos=1, side=tl, part=lemh) concat clip(pos=1, side=tl, part=a_verb) concat litTag("3") concat litTag("4") concat litTag("5") concat clip(pos=1, side=tl, part=lemq);
          end /* when */
          when clip(pos=1, side=sl, part=temps) equal litTag("ger") then
            lema_SV = "ger";
            temps_chunk = clip(pos=1, side=tl, part=temps);
            pers_chunk = litTag("PD");
            nbr_chunk = litTag("ND");
            verbfinal = clip(pos=1, side=tl, part=lemh) concat clip(pos=1, side=tl, part=a_verb) concat litTag("3") concat clip(pos=1, side=tl, part=lemq);
          end /* when */
          when clip(pos=1, side=sl, part=temps) equal litTag("inf") then
            lema_SV = "inf";
            temps_chunk = clip(pos=1, side=tl, part=temps);
            pers_chunk = litTag("PD");
            nbr_chunk = litTag("ND");
            verbfinal = clip(pos=1, side=tl, part=lemh) concat clip(pos=1, side=tl, part=a_verb) concat litTag("3") concat clip(pos=1, side=tl, part=lemq);
          end /* when */
        end /* choose */
      end /* otherwise */
    end /* choose */
  end /* macro */

  Rule(comment="REGLA: MONTH NUM, NUM (July 23, 2010 → 23 de juliol de 2010)")
    Pattern = months, num, coma, num;
    action
      firstWord(1);
      case
        when clip(pos=1, side=sl, part=lem) equal "March" then
          clip(pos=1, side=tl, part=lem) = "març";
          case
            when clip(pos=1, side=sl, part=a_nom) equal litTag("np.cog") then
              clip(pos=1, side=tl, part=a_nom) = litTag("n");
              clip(pos=1, side=tl, part=gen) = litTag("m");
              clip(pos=1, side=tl, part=nbr) = litTag("sg");
            end /* when */
          end /* choose */
        end /* when */
      end /* choose */
      out
        Chunk
          tags
            clip(pos=2, side=tl, part=a_adv);
            neg;
          end /* tags */
          lu
            clip(pos=2, side=tl, part=a_adv);
            neg;
            clip(pos=2, side=tl, part=whole)
          end /* lu */
          b(1);
          lu
            clip(pos=2, side=tl, part=a_adv);
            neg;
            clip(pos=2, side=tl, part=whole)
            "de"
            litTag("pr")
          end /* lu */
          b();
          lu
            clip(pos=2, side=tl, part=a_adv);
            neg;
            clip(pos=2, side=tl, part=whole)
            "de"
            litTag("pr")
            clip(pos=1, side=tl, part=whole)
            end /* lu */
            b();
          lu
            clip(pos=2, side=tl, part=a_adv);
            neg;
            clip(pos=2, side=tl, part=whole)
            "de"
            litTag("pr")
            clip(pos=1, side=tl, part=whole)
            "de"
            litTag("pr")
          end /* lu */
            b(3);
            lu
            clip(pos=2, side=tl, part=a_adv);
            neg;
            clip(pos=2, side=tl, part=whole)
            "de"
            litTag("pr")
            clip(pos=1, side=tl, part=whole)
            "de"
            litTag("pr")
            clip(pos=4, side=tl, part=whole)
          end /* lu */
          mlu
            lu
              clip(pos=2, side=tl, part=a_adv);
              neg;
              clip(pos=2, side=tl, part=whole)
              "de"
              litTag("pr")
              clip(pos=1, side=tl, part=whole)
              "de"
              litTag("pr")
              clip(pos=4, side=tl, part=whole)
              clip(pos=1, side=tl, part=whole)
            end /* lu */
            b();
            lu
              clip(pos=2, side=tl, part=a_adv);
              neg;
              clip(pos=2, side=tl, part=whole)
              "de"
              litTag("pr")
              clip(pos=1, side=tl, part=whole)
              "de"
              litTag("pr")
              clip(pos=4, side=tl, part=whole)
              clip(pos=1, side=tl, part=whole)
              "de"
              litTag("pr")
            end /* lu */
            clip(pos=2, side=tl, part=a_adv);
            neg;
            clip(pos=2, side=tl, part=whole)
            "de"
            litTag("pr")
            clip(pos=1, side=tl, part=whole)
            "de"
            litTag("pr")
            clip(pos=4, side=tl, part=whole)
            clip(pos=1, side=tl, part=whole)
            "de"
            litTag("pr")
          end /* mlu */
        end /* chunk */
      end /* out */
    end /* action */
  end /* rule */
end /* transfer */